name: CI/CD for Ecommerce Backend

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Log in to GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3️⃣ Build Docker image
      - name: Build Docker image
        run: docker build -t ghcr.io/budhathokidinesh/ecommerce-client-backend:latest -f Dockerfile .

      # 4️⃣ Push Docker image to GHCR
      - name: Push Docker image
        run: docker push ghcr.io/budhathokidinesh/ecommerce-client-backend:latest

      # 5️⃣ Deploy to EC2
      - name: Deploy to EC2
        run: |
          # Decode the Base64 SSH key and save it
          echo "${{ secrets.EC2_SSH_KEY_BASE64 }}" | base64 --decode > /tmp/ec2_key.pem
          chmod 600 /tmp/ec2_key.pem

          # SSH and run commands on EC2
          ssh -o StrictHostKeyChecking=no -i /tmp/ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            # Stop and remove old container if exists
            docker stop ecommerce-backend || true
            docker rm ecommerce-backend || true

            # Pull the latest Docker image
            docker pull ghcr.io/budhathokidinesh/ecommerce-client-backend:latest

            # Run container with all environment variables directly from GitHub secrets
            docker run -d -p 8001:8000 \
              -e OPENAI_API_KEY='${{ secrets.OPENAI_API_KEY }}' \
              -e MONGO_URL='${{ secrets.MONGO_URL }}' \
              -e STRIPE_SECRET_KEY='${{ secrets.STRIPE_SECRET_KEY }}' \
              -e STRIPE_WEBHOOK_SECRET='${{ secrets.STRIPE_WEBHOOK_SECRET }}' \
              -e FRONTEND_URL='${{ secrets.FRONTEND_URL }}' \
              -e CLIENT_SECRET_KEY='${{ secrets.CLIENT_SECRET_KEY }}' \
              -e EMAIL_USER='${{ secrets.EMAIL_USER }}' \
              -e EMAIL_PASS='${{ secrets.EMAIL_PASS }}' \
              -e CLOUDE_NAME='${{ secrets.CLOUDE_NAME }}' \
              -e API_KEY='${{ secrets.API_KEY }}' \
              -e API_SECRET='${{ secrets.API_SECRET }}' \
              -e ACCESSJWT_SECRET='${{ secrets.ACCESSJWT_SECRET }}' \
              -e REFRESHJWT_SECRET='${{ secrets.REFRESHJWT_SECRET }}' \
              -e VITE_GEMINI_API_KEY='${{ secrets.VITE_GEMINI_API_KEY }}' \
              --name ecommerce-backend \
              ghcr.io/budhathokidinesh/ecommerce-client-backend:latest

            # Optional: Verify container is running
            docker ps
          EOF
